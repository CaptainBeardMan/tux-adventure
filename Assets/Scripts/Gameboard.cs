using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;

public class Gameboard : ScriptableObject {

    class Level
    {
        private int lvl;
        private string[,] grid;
        private List<Door> doors;
        private int[] coords;
        private float[] pos;
        private int maxX;
        private int maxY;

        public Level(int number, string[,] gridValues, int startx, int starty, float posx, float posy)
        {
            maxX = gridValues.GetLength(0) - 1;
            maxY = gridValues.GetLength(1) - 1;
            grid = new string[maxX, maxY];
            grid = gridValues;
            coords = new int[2];
            coords[0] = startx;
            coords[1] = starty;
            pos = new float[2];
            pos[0] = posx;
            pos[1] = posy;
        }

        public void AddDoor(int destinationLevel, int destX, int destY, float posX, float posY)
        { // Door(int b, float bx, float by, int bgx, int bgy)
            if (doors == null) { doors = new List<Door>(); }
            doors.Add(new Door(destinationLevel, posX, posY, destX, destY));
        }

        public Door ReturnDoor(int i)
        {
            if (i < doors.Count && i >= 0)
            {
                return doors[i];
            }
            else
            {//todo(fix this fail open case)
                return doors[0];
            }
        }

        public int GetMaxX() { return maxX; }
        public int GetMaxY() { return maxY; }
        public string GetSpace(int x, int y)
        {
            if ((x >= 0 & x <= maxX) & (y >= 0 & y <= maxY))
            {
                return grid[x, y];
            }
            else
            {
                return null;
            }
        }
        public Vector3Int GetStart()
        {
            return new Vector3Int(coords[0], coords[1], 0);
        }
    }
    // Types of objects:  Hills, Grass, Stars, Doors, Ladders

    //  public string[,] gameObjects = { { } };
    private int levelIndex;
    private Level[] levels;
    // level 1 start:  {-2.266,-0.684}, [0,3] door at {16,12}
    //private readonly string[,] level1 = { { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, { "grass", "stair", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, { "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, { "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, { "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "stair", "grass", "grass" }, { "grass", "grass", "path", "path", "path", "path", "path", "path", "path", "path", "path", "grass", "grass", "path", "path", "path", "path", "path", "path", "grass" }, { "grass", "grass", "path", "path", "path", "path", "path", "path", "path", "path", "path", "grass", "path", "path", "path", "path", "path", "path", "path", "grass" }, { "grass", "grass", "path", "path", "path", "path", "path", "path", "path", "path", "path", "grass", "path", "path", "structure", "structure", "structure", "door", "structure", "grass" }, { "grass", "grass", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "structure", "structure", "structure", "structure", "structure", "grass" }, { "grass", "grass", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "structure", "structure", "structure", "structure", "structure", "grass" }, { "grass", "grass", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "structure", "structure", "structure", "structure", "structure", "grass" }, { "grass", "grass", "grass", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "structure", "structure", "structure", "structure", "structure", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, };
    private readonly string[,] level1 = { { "grass", "grass", "path", "TUX", "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, { "grass", "stair", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, { "grass", "grass", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "path", "path", "path", "grass", "grass", "grass" }, { "grass", "grass", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "path", "path", "path", "path", "grass", "grass" }, { "grass", "grass", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "grass", "grass", "path", "path", "grass", "grass" }, { "grass", "grass", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "grass", "grass", "path", "path", "grass", "grass" }, { "grass", "grass", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "grass", "grass", "path", "path", "grass", "grass" }, { "grass", "grass", "path", "path", "path", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "grass", "grass", "path", "path", "grass", "grass" }, { "grass", "grass", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "grass", "grass", "path", "path", "grass", "grass" }, { "grass", "grass", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "grass", "grass", "path", "path", "grass", "grass" }, { "grass", "grass", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "grass", "grass", "path", "path", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "path", "path", "path", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "path", "path", "path", "path", "path", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "structure", "structure", "structure", "structure", "structure", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "structure", "structure", "structure", "structure", "structure", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "structure", "structure", "structure", "structure", "structure", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "stair", "path", "path", "door", "structure", "structure", "structure", "structure", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "path", "path", "structure", "structure", "structure", "structure", "structure", "grass", "grass" }, { "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass" }, };
    // level 2 start:  {-5.172F,-1.05F}   [5,1] door at {5,11}
    private readonly string[,] level2 = { { "structure", "structure", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "structure", "structure", "path", "path" }, { "structure", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path" }, { "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path", "path" }, { "path", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path" }, { "path", "path", "structure", "structure", "structure", "path", "path", "path", "path", "path", "path", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path", "path" }, { "TUX", "path", "path", "stair", "path", "path", "path", "path", "path", "path", "path", "door", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path" }, { "path", "path", "structure", "structure", "structure", "path", "path", "path", "path", "path", "path", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path", "path" }, { "path", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path" }, { "path", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path", "path" }, { "structure", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path" }, { "structure", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "structure", "structure", "path", "path" }, };
    // level 3 start: {-1.945,2.836} [34,11] door at { , }
    private readonly string[,] level3 = { { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "ridge", "ridge", "ridge", "ridge", "ridge" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "structure", "structure", "structure", "ridge", "ridge" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "grass", "structure", "grass", "structure", "structure", "ridge" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "grass", "grass", "grass", "grass", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "structure", "grass", "grass", "grass", "grass", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "structure", "structure", "grass", "grass", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "grass", "grass", "structure", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "grass", "grass", "grass", "grass", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "grass", "grass", "grass", "grass", "grass", "grass", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "grass", "structure", "structure", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "structure", "grass", "structure", "path", "path", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "grass", "grass", "grass", "structure", "structure", "structure", "structure", "path", "path", "structure", "grass", "stair", "path", "path", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "grass", "grass", "grass", "structure", "grass", "structure", "structure", "path", "structure", "structure", "structure", "structure", "path", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "grass", "grass", "grass", "grass", "stair", "path", "path", "path", "path", "path", "path", "path", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "structure", "grass", "grass", "grass", "structure", "structure", "structure", "structure", "path", "path", "path", "path", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "grass", "grass", "grass", "grass", "structure", "path", "path", "path", "path", "path", "path", "path", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "grass", "grass", "grass", "grass", "grass", "structure", "structure", "path", "path", "path", "path", "path", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path", "path", "path", "path", "structure", "structure", "structure" }, { "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path", "structure", "structure", "structure", "path", "path", "path", "path", "structure", "structure", "structure", "structure" }, { "structure", "structure", "structure", "grass", "grass", "grass", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path", "structure", "path", "path", "path", "path", "structure", "structure", "structure", "structure", "structure" }, { "structure", "structure", "structure", "structure", "grass", "grass", "grass", "structure", "structure", "structure", "grass", "grass", "structure", "grass", "structure", "structure", "structure", "structure", "path", "path", "path", "path", "path", "path", "path", "structure", "structure", "structure", "structure" }, { "structure", "structure", "structure", "structure", "structure", "grass", "grass", "grass", "structure", "grass", "grass", "grass", "grass", "grass", "structure", "structure", "structure", "path", "path", "path", "path", "path", "path", "path", "path", "path", "structure", "structure", "structure" }, { "structure", "structure", "structure", "structure", "structure", "structure", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "stair", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "structure", "structure" }, { "structure", "structure", "structure", "structure", "structure", "structure", "structure", "grass", "grass", "grass", "grass", "grass", "grass", "structure", "structure", "structure", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "structure" }, { "structure", "structure", "structure", "structure", "structure", "structure", "grass", "grass", "grass", "grass", "grass", "grass", "structure", "structure", "structure", "structure", "structure", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "structure" }, { "structure", "structure", "structure", "structure", "structure", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "structure", "structure", "structure", "structure", "structure", "path", "path", "path", "path", "path", "path", "path", "path", "path", "structure", "structure" }, { "structure", "structure", "structure", "path", "stair", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "structure", "grass", "structure", "structure", "structure", "path", "path", "path", "path", "path", "path", "path", "path", "path", "structure", "structure", "structure" }, { "structure", "structure", "structure", "door", "structure", "structure", "structure", "structure", "structure", "structure", "grass", "structure", "structure", "grass", "structure", "structure", "path", "path", "path", "path", "path", "path", "path", "path", "path", "structure", "structure", "structure", "structure" }, { "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path", "structure", "path", "path", "path", "path", "path", "structure", "structure", "structure", "structure", "structure" }, { "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "grass", "grass", "grass", "grass", "structure", "path", "path", "structure", "structure", "structure", "path", "path", "path", "path", "path", "structure", "structure", "structure", "structure" }, { "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "grass", "grass", "grass", "grass", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "path", "path", "path", "path", "path", "structure", "structure", "structure" }, { "structure", "structure", "structure", "grass", "structure", "grass", "structure", "grass", "structure", "structure", "grass", "grass", "grass", "grass", "grass", "grass", "structure", "path", "structure", "structure", "structure", "path", "path", "path", "path", "path", "path", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "structure", "structure", "grass", "grass", "structure", "structure", "structure", "structure", "structure", "path", "path", "path", "path", "path", "path", "path", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "structure", "structure", "grass", "stair", "path", "path", "structure", "structure", "structure", "path", "path", "path", "path", "path", "path", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "TUX", "structure", "structure", "grass", "grass", "structure", "path", "path", "structure", "structure", "path", "path", "path", "path", "path", "structure", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "path", "structure", "structure", "grass", "grass", "structure", "path", "path", "structure", "structure", "path", "path", "path", "path", "structure", "structure", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "path", "path", "path", "structure", "grass", "grass", "structure", "structure", "path", "path", "path", "path", "structure", "path", "path", "path", "structure", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "path", "path", "structure", "grass", "grass", "structure", "structure", "structure", "path", "path", "structure", "structure", "structure", "path", "path", "path", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "path", "structure", "grass", "grass", "structure", "structure", "path", "path", "structure", "structure", "structure", "structure", "structure", "path", "path", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "path", "path", "structure", "structure", "structure", "structure", "path", "path", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "path", "path", "path", "path", "path", "path", "path", "path", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "path", "path", "path", "path", "structure", "path", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "path", "path", "structure", "structure", "structure", "path", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "path", "path", "structure", "structure", "structure", "structure", "structure", "path", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge" }, { "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "structure", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge", "ridge" }, };

    public void Start()
    {   /// int number, string[,] gridValues, int startx, int starty, float posx, float posy
       
        levelIndex = 0;
        levels = new Level[3];
        levels[0] = new Level(1, level1, 0, 3, -2.39F, -0.724F);       
        levels[0].AddDoor(1, 5, 0, -5.171F, -1.059F);
        
        levels[1] =  new Level(2, level2,  5,  0, -5.172F, -1.059F);
        levels[1].AddDoor(2, 34, 11, -1.945F, 2.836F);
        
        levels[2] = new Level(3, level3, 34, 11, -1.945F, 2.836F);
        levels[2].AddDoor(0, 0, 3, -2.39F, -0.724F);
        
    }

    public string GetSpace(int x, int y)
    {
        //Debug.Log("Gameboard Called ("+x+","+y+")  Maxes("+ levels[levelIndex].GetMaxX() + "," + levels[levelIndex].GetMaxY() + ")");
        if (x < 0 | y<0 | x>levels[levelIndex].GetMaxX() | y > levels[levelIndex].GetMaxY()) { return ""; }
        //if ((x < 0)|(y<0)|(x>gameObjects.Length) | (y > gameObjects.Length)){ return null; }
        Level temp = levels[levelIndex];
       // Debug.Log("Getspace: " + levels[levelIndex].GetSpace(x, y));
        return temp.GetSpace(x, y);
    }

    public Door GetDoor(int x, int y)
    {
        return levels[levelIndex].ReturnDoor(1);
    }
    public void UseDoor(int x, int y)
    {
        levelIndex = levels[levelIndex].ReturnDoor(1).getDestinationLevel();
    }
    public int GetIndex()
    {
        return levelIndex;
    }
    
    public Vector3Int getStartVector()
    {
        return levels[levelIndex].GetStart();
    }
}
